
Besturingseenheid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000022e  000002c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000022e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800102  00800102  000002c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a51  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000794  00000000  00000000  00000e05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004fb  00000000  00000000  00001599  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  00001a94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045d  00000000  00000000  00001b84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000016b  00000000  00000000  00001fe1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  0000214c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e2       	ldi	r30, 0x2E	; 46
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 30       	cpi	r26, 0x03	; 3
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 0e 01 	call	0x21c	; 0x21c <main>
  9e:	0c 94 15 01 	jmp	0x22a	; 0x22a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <pind_high>:
		omlaag();
		status = OMLAAG;	
	}
	else if(get_adc_value(A1) < 60 && status == OMLAAG) {
		omhoog();
		status = OMHOOG;
  a6:	9b b1       	in	r25, 0x0b	; 11
  a8:	21 e0       	ldi	r18, 0x01	; 1
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <pind_high+0xc>
  ae:	22 0f       	add	r18, r18
  b0:	33 1f       	adc	r19, r19
  b2:	8a 95       	dec	r24
  b4:	e2 f7       	brpl	.-8      	; 0xae <pind_high+0x8>
  b6:	29 2b       	or	r18, r25
  b8:	2b b9       	out	0x0b, r18	; 11
  ba:	08 95       	ret

000000bc <pind_low>:
  bc:	9b b1       	in	r25, 0x0b	; 11
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <pind_low+0xc>
  c4:	22 0f       	add	r18, r18
  c6:	33 1f       	adc	r19, r19
  c8:	8a 95       	dec	r24
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <pind_low+0x8>
  cc:	20 95       	com	r18
  ce:	29 23       	and	r18, r25
  d0:	2b b9       	out	0x0b, r18	; 11
  d2:	08 95       	ret

000000d4 <midden>:
  d4:	cf 93       	push	r28
  d6:	df 93       	push	r29
  d8:	c7 e0       	ldi	r28, 0x07	; 7
  da:	d0 e0       	ldi	r29, 0x00	; 0
  dc:	84 e0       	ldi	r24, 0x04	; 4
  de:	0e 94 53 00 	call	0xa6	; 0xa6 <pind_high>
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	89 e6       	ldi	r24, 0x69	; 105
  e6:	98 e1       	ldi	r25, 0x18	; 24
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <midden+0x14>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <midden+0x1e>
  f2:	00 00       	nop
  f4:	84 e0       	ldi	r24, 0x04	; 4
  f6:	0e 94 5e 00 	call	0xbc	; 0xbc <pind_low>
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	84 e3       	ldi	r24, 0x34	; 52
  fe:	9c e0       	ldi	r25, 0x0C	; 12
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <midden+0x2c>
 108:	00 c0       	rjmp	.+0      	; 0x10a <midden+0x36>
 10a:	00 00       	nop
 10c:	21 97       	sbiw	r28, 0x01	; 1
 10e:	31 f7       	brne	.-52     	; 0xdc <midden+0x8>
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	08 95       	ret

00000116 <omhoog>:
 116:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <status>
 11a:	81 11       	cpse	r24, r1
 11c:	0b c0       	rjmp	.+22     	; 0x134 <omhoog+0x1e>
 11e:	85 e0       	ldi	r24, 0x05	; 5
 120:	0e 94 5e 00 	call	0xbc	; 0xbc <pind_low>
 124:	0e 94 6a 00 	call	0xd4	; 0xd4 <midden>
 128:	83 e0       	ldi	r24, 0x03	; 3
 12a:	0e 94 53 00 	call	0xa6	; 0xa6 <pind_high>
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <status>
 134:	08 95       	ret

00000136 <omlaag>:
 136:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <status>
 13a:	81 30       	cpi	r24, 0x01	; 1
 13c:	51 f4       	brne	.+20     	; 0x152 <omlaag+0x1c>
 13e:	83 e0       	ldi	r24, 0x03	; 3
 140:	0e 94 5e 00 	call	0xbc	; 0xbc <pind_low>
 144:	0e 94 6a 00 	call	0xd4	; 0xd4 <midden>
 148:	85 e0       	ldi	r24, 0x05	; 5
 14a:	0e 94 53 00 	call	0xa6	; 0xa6 <pind_high>
 14e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <status>
 152:	08 95       	ret

00000154 <get_adc_value>:
 154:	80 66       	ori	r24, 0x60	; 96
 156:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 15a:	ea e7       	ldi	r30, 0x7A	; 122
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	87 e8       	ldi	r24, 0x87	; 135
 160:	80 83       	st	Z, r24
 162:	80 81       	ld	r24, Z
 164:	80 64       	ori	r24, 0x40	; 64
 166:	80 83       	st	Z, r24
 168:	80 81       	ld	r24, Z
 16a:	86 fd       	sbrc	r24, 6
 16c:	fd cf       	rjmp	.-6      	; 0x168 <get_adc_value+0x14>
 16e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 172:	08 95       	ret

00000174 <uart_init>:
 174:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 178:	83 e3       	ldi	r24, 0x33	; 51
 17a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 17e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 182:	88 e1       	ldi	r24, 0x18	; 24
 184:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 188:	86 e0       	ldi	r24, 0x06	; 6
 18a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 18e:	08 95       	ret

00000190 <uart_recive>:
 190:	e0 ec       	ldi	r30, 0xC0	; 192
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	88 23       	and	r24, r24
 198:	ec f7       	brge	.-6      	; 0x194 <uart_recive+0x4>
 19a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 19e:	08 95       	ret

000001a0 <lichtintensiteit>:
 1a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <A1>
 1a4:	0e 94 aa 00 	call	0x154	; 0x154 <get_adc_value>
 1a8:	e0 ec       	ldi	r30, 0xC0	; 192
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	90 81       	ld	r25, Z
 1ae:	95 ff       	sbrs	r25, 5
 1b0:	fd cf       	rjmp	.-6      	; 0x1ac <lichtintensiteit+0xc>
 1b2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1b6:	08 95       	ret

000001b8 <temperatuur>:
 1b8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 1bc:	0e 94 aa 00 	call	0x154	; 0x154 <get_adc_value>
 1c0:	e0 ec       	ldi	r30, 0xC0	; 192
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	90 81       	ld	r25, Z
 1c6:	95 ff       	sbrs	r25, 5
 1c8:	fd cf       	rjmp	.-6      	; 0x1c4 <temperatuur+0xc>
 1ca:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1ce:	08 95       	ret

000001d0 <get_command>:
 1d0:	0e 94 c8 00 	call	0x190	; 0x190 <uart_recive>
 1d4:	88 36       	cpi	r24, 0x68	; 104
 1d6:	e1 f0       	breq	.+56     	; 0x210 <get_command+0x40>
 1d8:	28 f4       	brcc	.+10     	; 0x1e4 <get_command+0x14>
 1da:	84 36       	cpi	r24, 0x64	; 100
 1dc:	a9 f0       	breq	.+42     	; 0x208 <get_command+0x38>
 1de:	87 36       	cpi	r24, 0x67	; 103
 1e0:	d1 f0       	breq	.+52     	; 0x216 <get_command+0x46>
 1e2:	08 95       	ret
 1e4:	83 37       	cpi	r24, 0x73	; 115
 1e6:	41 f0       	breq	.+16     	; 0x1f8 <get_command+0x28>
 1e8:	84 37       	cpi	r24, 0x74	; 116
 1ea:	19 f0       	breq	.+6      	; 0x1f2 <get_command+0x22>
 1ec:	8c 36       	cpi	r24, 0x6C	; 108
 1ee:	a9 f4       	brne	.+42     	; 0x21a <get_command+0x4a>
 1f0:	08 c0       	rjmp	.+16     	; 0x202 <get_command+0x32>
 1f2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <temperatuur>
 1f6:	08 95       	ret
 1f8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <status>
 1fc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 200:	08 95       	ret
 202:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lichtintensiteit>
 206:	08 95       	ret
 208:	84 e6       	ldi	r24, 0x64	; 100
 20a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 20e:	08 95       	ret
 210:	0e 94 8b 00 	call	0x116	; 0x116 <omhoog>
 214:	08 95       	ret
 216:	0e 94 9b 00 	call	0x136	; 0x136 <omlaag>
 21a:	08 95       	ret

0000021c <main>:
	}
}

int main(void)
{
	DDRD = 0b00111000; //Zet outputs goed (pin 4-6)
 21c:	88 e3       	ldi	r24, 0x38	; 56
 21e:	8a b9       	out	0x0a, r24	; 10
	uart_init(); // Initialiseer UART communicatie
 220:	0e 94 ba 00 	call	0x174	; 0x174 <uart_init>

	while (1) {
		get_command();
 224:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <get_command>
 228:	fd cf       	rjmp	.-6      	; 0x224 <main+0x8>

0000022a <_exit>:
 22a:	f8 94       	cli

0000022c <__stop_program>:
 22c:	ff cf       	rjmp	.-2      	; 0x22c <__stop_program>
